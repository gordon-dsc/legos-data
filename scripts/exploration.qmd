---
title: "Data Analysis Script"
author: Ismael Rivera
format: html
---

# Exploration

### Install Packages

```{r packages}
library(tidyverse)
```

## Question 1

How many sets are there for each media franchise?

```{r question 1}

# group by media franchise to see how many sets per franchise
# display from most sets to least sets
most_sets <- lego_franchise |>
  group_by(media_franchise) |>
  summarise(count = n()) |>
  arrange(desc(count))
```

```{r csv}

write_csv(x = most_sets,
          file = "../output/most_sets.csv")
```

## Question 2

a\) Which year was the most sets released?

```{r question 2}

# group by release year to see in which year the most sets were released
# arrange starting with the most recent year
sets_in_year <- lego_franchise |>
  group_by(release_year) |>
  summarise(count = n()) |>
  arrange(desc(release_year))
```

```{r csv}

write_csv(x = sets_in_year,
          file = "../output/sets_in_year.csv")
```

```{r plot}

# plot to show the amount of sets released each year
ggplot(lego_franchise) +
  geom_bar(aes(x = release_year)) +
  labs(x = "Release Year", y = "Sets", title = "Amount of Sets Released Per Year") -> sets_yr_plot
```

```{r plot}

ggsave(filename = "../output/sets_yr_plot.png")
```

b\) Which franchise released the most sets in 2021 (the year in which the most sets were released)?

```{r question 2}

# filter for 2021 and count the amount of sets released by the franchises in that year
sets_21 <- lego_franchise |>
  filter(release_year == 2021) |>
  group_by(media_franchise) |>
  summarise(count = n()) |>
  arrange(desc(count))
```

```{r csv}

write_csv(x = sets_21,
          file = "../output/sets_21.csv")
```

## Question 3

Which franchise is on the rise? In the last 5 years, which franchise released the most lego sets?

```{r question 3}

# filter for the last five years (not counting 2024 since it is still 2023)
# group by the franchises and count the amount of sets
last_five_yrs <- lego_franchise |>
  filter(release_year >= 2019 & release_year < 2024) |>
  group_by(media_franchise) |>
  summarise(count= n()) |>
  arrange(desc(count))
```

```{r csv}

write_csv(x = last_five_yrs,
          file = "../output/last_five_yrs.csv")
```

## Question 4

Are there more Lego sets in movies than in non-movies?

```{r question 4}

# movies
movie_subset <-filter(lego_franchise, original_medium == "Film" | original_medium == "Animated film" | original_medium == "Animated films")
movie_vector <- as.vector(movie_subset$media_franchise)
length(movie_vector) -> movie_sets_count
length(unique(movie_vector)) -> movie_franchise
movie_average <- (movie_sets_count / movie_franchise)
movie_average|>View()
```

```{r question 4}

# non-movies
nmovie_subset <-filter(lego_franchise, original_medium != "Film" & original_medium != "Animated film" & original_medium != "Animated films")
nmovie_vector <- as.vector(nmovie_subset$media_franchise)
length(nmovie_vector) -> nmovie_sets_count
length(unique(nmovie_vector)) -> nmovie_franchise
nmovie_average <- (nmovie_sets_count / nmovie_franchise)
nmovie_average|>View()
```

This shows that there are, on average, more sets if the franchise is a movie.

## Question 5

Do franchises that are higher grossing have more sets?

```{r question 5}

question_5 <- lego_franchise|>
  group_by(media_franchise)|>
  mutate(count = n()) |>
  distinct(media_franchise, revenue, count) |>
  ggplot(mapping = aes(x = revenue,
                       y = count)) +
  geom_point() +
  geom_smooth(method = "lm")

ggsave(filename = "../output/question_5.png")
```

## Question 6

Is the above answer different than with movie franchises vs non-movie franchises?

```{r question 6}

question_6 <- lego_franchise|>
  mutate(movie = if_else(
    condition = original_medium == "Film" | original_medium == "Animated films",
    true = "movie",
    false = "not_movie"))|>
  group_by(media_franchise)|>
  mutate(count = n()) |>
  distinct(media_franchise, revenue, count, movie) |>
  ggplot(mapping = aes(x = revenue,
                       y = count,
                       color = movie)) +
  geom_point() +
  geom_smooth(method = "lm")

ggsave(filename = "../output/question_6.png")
```
